-- V1.0a AR
-- 30.12.2016 15:30:41 AR V1.0b
-- 21.05.2017 10:50:10 AR V1.0c
-- 09.07.2017 10:09:52 AR V1.0d
-- 25.09.2018 09:34:57 AR V1.0e Different mode: Add Rectangel and Trapeze
-- 27.12.2018 11:47:14 AR V1.0e sim.stepRateS -> sim.ellapsedS
-- 25.03.2019 06:35:53 AR V1.0f block.parent.ellapsedS

generic = {
  parameter = {
    initalValue = 0.0,
    mode = 0,
  },

  init = function(self)
    block.setInputsPinCount(1)
    block.setOutputsPinCount(1)
    block.modifyFlags('SupressStopFunctionCall', true)
  end,

  open = function(self)
    gui.add('Info', 'Info', 'Integrator', 'Continuous-time integration of the input signal')
    gui.add('Edit', 'EditInitalValue', 'Inital value')
    gui.add('RadioGroup', 'RadioGroupMode', 'Mode', 'Rectangle\nTrapeze\nSimpson', {Height = 80})
    gui.set('EditInitalValue', 'Number', self.parameter.initalValue)
    gui.set('RadioGroupMode', 'ItemIndex', self.parameter.mode)
    gui.setSize()
  end,

  apply = function(self)
    self.parameter.initalValue = gui.get('EditInitalValue', 'Number')
    self.parameter.mode = gui.get('RadioGroupMode', 'ItemIndex')
  end,

  close = function()
  end,

  avatar = function(self)
    return block.getDefaultAvatar(0x50, "'1\\n\\xE2\\x80\\x95\\xE2\\x80\\x95\\nn'")
  end,

  generate = function(self)
    local source = {
      [0] =
        [==[
          local block = {}

          block.start = function()
            block.value = INITALVALUE
          end

          block.step = function(a)
            block.value = block.value + a * block.parent.ellapsedS
            return block.value
          end

          return block
        ]==],
      [1] =
        [==[
          local block = {}

          block.start = function()
            block.value = INITALVALUE
          end

          block.step = function(a)
            if not block.a then
              block.a = a
            end
            block.value = block.value + (a + block.a) / 2.0 * block.parent.ellapsedS
            block.a = a
            return block.value
          end

          return block
        ]==],
      [2] =
        [==[
          local block = {}

          block.start = function()
            block.value = INITALVALUE
          end

          block.step = function(a)
            if not block.a1 then
              block.a1, block.a2 = a, a
            end
            block.value = block.value + (block.a2 * (1.0 / 6.0) + block.a1 * (2.0 / 3.0) + a * (1.0 / 6.0)) * block.parent.ellapsedS
            block.a2 = block.a1
            block.a1 = a
            return block.value
          end

          return block
        ]==],
      }

    local replaces = {
      ['INITALVALUE'] = self.parameter.initalValue,
    }
    return string.gsub(source[self.parameter.mode], '%a+', replaces)
  end,

}

